services:
    ##########################################
    ## Kafka
    ##########################################
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        depends_on:
            - kafka
            - zookeeper
            # - schemaregistry
            # - kafka-connect
        networks:
            - local 

    zookeeper:
        container_name: zookeeper
        image: confluentinc/cp-zookeeper:7.6.0
        networks:
            - local 
 
    kafka:
        container_name: kafka
        image: confluentinc/cp-kafka:7.6.0
        depends_on:
            - zookeeper
        networks:
            - local 

    # schemaregistry:
    #     container_name: schemaregistry
    #     image: confluentinc/cp-schema-registry:7.6.0
    #     depends_on:
    #         - kafka
    #     networks:
    #         - local 

    # kafka-connect:
    #     container_name: kafka-connect
    #     image: confluentinc/cp-kafka-connect:7.6.0
    #     depends_on:
    #         - kafka
    #         - schemaregistry
    #     networks:
    #         - local 

    ##########################################
    ## Services
    ##########################################
    web-apigateway:
        container_name: web-apigateway
        image: ${DOCKER_REGISTRY-}webapigateway
        build:
            context: .
            dockerfile: src/ApiGateways/Web.ApiGateway/Dockerfile
        # depends_on:
        #     - identity-api
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.web-apigateway  

    pg-eventstore-db:
        container_name: pg-eventstore-db
        image: postgres:15-alpine
        networks:
            - local
    
    # Ordering
    ordering-api:
        container_name: ordering-api
        image: ${DOCKER_REGISTRY-}orderingapi
        build:
              context: .
              dockerfile: src/Services/Ordering/Ordering.API/Dockerfile
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.ordering

    # Identity
    # identity-api:
    #     container_name: identity-api
    #     image: ${DOCKER_REGISTRY-}identityapi
    #     build:
    #         context: .
    #         dockerfile: src/Services/Identity/Identity.API/Dockerfile
    #     # depends_on:
    #     #     kafka:
    #     #         condition: service_healthy
    #     networks:
    #         - local
    #     logging:
    #         driver: fluentd
    #         options:
    #             fluentd-async: "true"
    #             tag: host.identity
    
    keycloak:
        container_name: keycloak
        image: quay.io/keycloak/keycloak:26.0.0
        restart: on-failure
        networks:
            - local

    # mysql db. using service per schema
    mysql-db:
        container_name: mysql-db
        image: mysql:8.0.34
        restart: on-failure
        networks:
            - local

    # Product
    productaggregate-api:
        container_name: productaggregate-api
        image: ${DOCKER_REGISTRY-}productaggregateapi
        build:
            context: .
            dockerfile: src/Services/Product/ProductAggregate.API/Dockerfile
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.productaggregate

    product-api-1:
        container_name: product-api-1
        image: ${DOCKER_REGISTRY-}productapi
        build:
            context: .
            dockerfile: src/Services/Product/Product.API/Dockerfile
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.product

    product-db-1:
        container_name: product-db-1
        image: mongo:7.0.9
        restart: on-failure
        networks:
            - local
    
    product-api-2:
        container_name: product-api-2
        image: ${DOCKER_REGISTRY-}productapi
        build:
            context: .
            dockerfile: src/Services/Product/Product.API/Dockerfile
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.product

    product-db-2:
        container_name: product-db-2
        image: mongo:7.0.9
        restart: on-failure
        networks:
            - local
    
    product-api-3:
        container_name: product-api-3
        image: ${DOCKER_REGISTRY-}productapi
        build:
            context: .
            dockerfile: src/Services/Product/Product.API/Dockerfile
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: host.product

    product-db-3:
        container_name: product-db-3
        image: mongo:7.0.9
        restart: on-failure
        networks:
            - local               

    ##########################################
    ## Monitoring
    ##########################################
    fluent-bit:
        container_name: fluent-bit
        image: fluent/fluent-bit:2.2.2
        networks:
            - local

    ## Fluent bit - Elasticsearch, Kibana
    # elasticsearch:
    #     container_name: elasticsearch
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    #     restart: on-failure
    #     networks:
    #         - local
    #     depends_on:
    #         - fluent-bit
    #     logging:
    #         driver: fluentd
    #         options:
    #             fluentd-async: "true"
    #             tag: logger.es

    # kibana:
    #     container_name: kibana
    #     image: docker.elastic.co/kibana/kibana:7.17.18
    #     restart: on-failure
    #     networks:
    #         - local
    #     depends_on:
    #         - fluent-bit
    #         - elasticsearch
    #     logging:
    #         driver: fluentd
    #         options:
    #             fluentd-async: "true"
    #             tag: logger.kibana

    # Fluent bit - Loki, Grafana
    loki:
        container_name: loki
        image: grafana/loki:2.9.4
        networks:
            - local
    
    grafana:
        container_name: grafana
        image: grafana/grafana:10.2.4
        networks:
            - local
        depends_on:
            - fluent-bit
            - loki

    # Observer
    prometheus:
        container_name: prometheus
        image: prom/prometheus:v2.49.1
        restart: unless-stopped
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    nodeexporter:
        container_name: nodeexporter
        image: prom/node-exporter:v1.7.0
        restart: unless-stopped
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    cadvisor:
        container_name: cadvisor
        image: gcr.io/google-containers/cadvisor:v0.36.0
        restart: unless-stopped
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    pushgateway:
        container_name: pushgateway
        image: prom/pushgateway:v1.6.2
        restart: unless-stopped
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    # alertmanager:
    #     container_name: alertmanager
    #     image: prom/alertmanager:v0.26.0
    #     restart: unless-stopped
    #     networks:
    #         - local
    #     labels:
    #         org.label-schema.group: "monitoring"

    # caddy:
    #     container_name: caddy
    #     image: caddy:2.7.5
    #     container_name: caddy
    #     restart: unless-stopped
    #     networks:
    #         - local
    #     labels:
    #         org.label-schema.group: "monitoring"

    jaeger:
        # profiles: [ otel, otel-all, all ]
        image: jaegertracing/all-in-one:latest
        container_name: jaeger
        networks:
            - local
networks:
    local:
        driver: bridge